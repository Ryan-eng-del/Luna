# Copyright 2024 Benjamin Lee <cyan0908@163.com>. All rights reserved.
# Use of this source code is governed by a MIT style
# license that can be found in the LICENSE file.

# Luna  全配置
# RESTful 服务配置
# 替换环境变量
log:
  debug-mode: true # 是否是debug模式。如果是debug模式，会对log.Debug 日志进行跟踪。
  format: text # 支持的日志输出格式，目前支持text和json两种。
  enable-file: false # 日志是否输出到文件
  enable-color: true # 是否开启颜色输出，true:是，false:否
  layout: "2006-01-02 15:04:05"
  # 如果不写，默认是程序入口根入口目录的 luna.err.log  luna.inf.log luna.deb.log
  info-file-path: ""
  error-file-path: ""
  debug-file-path: ""
  # 日志可以写入文件时，默认日志不会过期 100M 一个日志文件，可以通过以下选项对日志保存时间进行控制
  max-age: 0
  max-backups: 0
  max-size: 100

feature:
  enable-metrics: true # 开启 metrics, router:  /metrics
  profiling: true # 开启性能分析, 可以通过 <host>:<port>/debug/pprof/地址查看程序栈、线程等系统信息，默认值为 true

email:
  SMTP-server: smtp.163.com
  SMTP-port: 465
  SMTP-username: cyan0908@163.com
  SMTP-password: xxxx
  SMTP-from-email: cyan0908@163.com
  template-dir: /Users/max/Documents/coding/Backend/Golang/Personal/Luna/internal/api-server/templates

server:
  mode: debug # server mode: release, debug, test，默认 release
  healthz: true # 是否开启健康检查，如果开启会安装 /healthz 路由，默认 true
  # middlewares: recovery,logger,secure,nocache,cors,dump # 加载的 gin 中间件列表，多个中间件，逗号(,)隔开
  middlewares: logger,cors # 加载的 gin 中间件列表，多个中间件，逗号(,)隔开
  # max-ping-count: 3 # http 服务启动后，自检尝试次数，默认 3
# GRPC 服务配置
# grpc:
#   bind-address: ${IAM_APISERVER_GRPC_BIND_ADDRESS} # grpc 安全模式的 IP 地址，默认 0.0.0.0
#   bind-port: ${IAM_APISERVER_GRPC_BIND_PORT} # grpc 安全模式的端口号，默认 8081
grpc:
  bind-address: 0.0.0.0 # grpc 安全模式的 IP 地址，默认 0.0.0.0
  bind-port: 8081 # grpc 安全模式的端口号，默认 8081

# HTTP 配置
insecure:
  bind-address: 127.0.0.1 # 绑定的不安全 IP 地址，设置为 0.0.0.0 表示使用全部网络接口，默认为 127.0.0.1
  bind-port: 8082 # 提供非安全认证的监听端口，默认为 8080

# HTTPS 配置
secure:
  bind-address: 0.0.0.0 # HTTPS 安全模式的 IP 地址，默认为 0.0.0.0
  bind-port: 8443 # 使用 HTTPS 安全模式的端口号，设置为 0 表示不启用 HTTPS，默认为 8443
  tls:
    #cert-dir: .iam/cert # TLS 证书所在的目录，默认值为 /var/run/iam
    #pair-name: iam # TLS 私钥对名称，默认 iam
    cert-key:
      cert-file: # 包含 x509 证书的文件路径，用 HTTPS 认证
      private-key-file: # TLS 私钥

# MySQL 数据库相关配置
mysql:
  host: 127.0.0.1:3307 # MySQL 机器 ip 和端口，默认 127.0.0.1:3306
  username: root # MySQL 用户名(建议授权最小权限集)
  password: 123456 # MySQL 用户密码
  database: luna # iam 系统所用的数据库名
  max-idle-connections: 100 # MySQL 最大空闲连接数，默认 100
  max-open-connections: 100 # MySQL 最大打开的连接数，默认 100
  max-connection-life-time: 10s # 空闲连接最大存活时间，默认 10s
  log-level: 4 # GORM log level, 1: silent, 2:error, 3:warn, 4:info

# Redis 配置
# redis:
#   host: ${REDIS_HOST} # redis 地址，默认 127.0.0.1:6379
#   port: ${REDIS_PORT} # redis 端口，默认 6379
#   password: ${REDIS_PASSWORD} # redis 密码
redis:
  host: 127.0.0.1 # redis 地址，默认 127.0.0.1:6379
  port: 6379 # redis 端口，默认 6379
  password: 123456 # redis 密码
  addrs:
  master-name: # redis 集群 master 名称
  username: # redis 登录用户名
  database: 0 # redis 数据库
  optimisation-max-idle: 2000 # redis 连接池中的最大空闲连接数
  optimisation-max-active: 4000 # 最大活跃连接数
  timeout: 0 # 连接 redis 时的超时时间
  enable-cluster: false # 是否开启集群模式
  use-ssl: false # 是否启用 TLS
  ssl-insecure-skip-verify: false # 当连接 redis 时允许使用自签名证书

# JWT 配置
jwt:
  realm: JWT # jwt 标识
  key: dfVpOK8LZeJLZHYmHdb1VdyRrACKpqoo # 服务端密钥
  timeout: 24 # access token 过期时间(小时)
  refresh: 30 # refresh token 过期时间(天)
